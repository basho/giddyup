# -*- mode: ruby -*-
require 'rake-pipeline-web-filters'
require 'uglifier'
require 'tilt'
require 'execjs'

# Copied from react-rails for now, loldeps
module ::React
  module JSX
    def self.context
      @context ||=
        begin
          contents =
            # If execjs uses therubyracer, there is no 'global'. Make sure
            # we have it so JSX script can work properly.
            'var global = global || this;' +
            File.read(File.expand_path("../assets/javascripts/tools/JSXTransformer-0.10.0.js",
                                       __FILE__))
          ExecJS.compile(contents)
        end
    end

    def self.transform(code)
      result = context.call('JSXTransformer.transform', code)
      return result['code']
    end

    class Filter < Rake::Pipeline::Filter
      def generate_output(inputs, output)
        inputs.each do |input|
          output.write ::React::JSX::transform(input.read)
        end
      end
    end
  end
end

output 'public/javascripts'
input 'assets/javascripts' do
  match 'vendor/**/*.js' do
    files = %w(
      vendor/es5-shim.js
      vendor/es5-sham.js
      vendor/minispade.js
      vendor/jquery.js
      vendor/react-0.10.0.js
      vendor/routie.js
    )

    concat files, 'vendor.js'
  end

  match '{app,config,lib}/**/*.js' do
    filter React::JSX::Filter
    minispade(
      string: true,
      rewrite_requires: true,
      module_id_generator: proc { |input|
        input.path.sub(%r(^(app|config|lib)/), '').sub(/\.js$/, '')
      }
    )
    concat 'application.js'
  end
end

output 'public/stylesheets'
input 'assets/javascripts/spec' do
  match '**/*.css' do
    copy 'spec.css'
  end
end
input 'assets/stylesheets' do
  match '**/*.css' do
    files = %w(
      vendor/bootstrap.css
    )
    concat files, 'application.css'
  end
end

output 'public'
input 'assets' do
  match '*.erb' do
    tilt do |input|
      input.sub /\.erb$/, ''
    end
  end
end

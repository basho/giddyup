minispade.register("ajax",function(){var normalizeRequestURL=function(url){return url.split("?")[0]};var recordRequest=function(event,jqXHR,settings){var url=normalizeRequestURL(settings.url);GiddyUp.activeAjax[url]=settings.context;GiddyUp.render()};var removeRequest=function(event,jqXHR,settings){var url=normalizeRequestURL(settings.url);delete GiddyUp.activeAjax[url];GiddyUp.render()};$(document).ajaxSend(recordRequest);$(document).ajaxComplete(removeRequest);$(document).ajaxError(removeRequest);var groupScorecards=function(scorecards){var grouped={},sortByName=GiddyUp.sortBy("name");scorecards.forEach(function(scorecard){var version=parseVersion(scorecard);if(version in grouped){grouped[version].push(scorecard);grouped[version].sort(sortByName)}else{grouped[version]=[scorecard]}});return grouped};var parseVersion=function(scorecard){var name=scorecard.name,num_version=/\d+(?:\.\d+)+/.exec(name),digits;if(num_version===undefined||num_version===null){return name}else{num_version=num_version[0];digits=num_version.split(".");for(var i=0;i<3-digits.length;i++){num_version+=".0"}return num_version}};var indexOnId=function(collection){return collection.reduce(function(acc,item){acc[item.id.toString()]=item;acc[item.id]=item;return acc},{})};var extractPlatforms=function(tests){return tests.reduce(function(platforms,t){if(platforms.indexOf(t.platform)===-1)platforms.push(t.platform);return platforms},[]).sort()};var groupMatrix=function(tests,platforms){return tests.reduce(function(matrix,t){if(!(t.name in matrix)){matrix[t.name]={};platforms.forEach(function(p){matrix[t.name][p]=[]})}t.resultsById=indexOnId(t.test_results);matrix[t.name][t.platform].push(t);return matrix},{})};GiddyUp.fetchProjects=function(cb){GiddyUp.fetch({url:"/projects",predicate:GiddyUp.projects.length>0,shortcut:GiddyUp.projects,helpText:"Projects list",processor:function(result){var projects=result["projects"].sort(GiddyUp.sortBy("name"));GiddyUp.projects=projects;projects.forEach(function(p){GiddyUp.projectsById[p.name]=p});return projects}},cb)};GiddyUp.fetchScorecards=function(project,cb){GiddyUp.fetch({url:"/projects/"+project.name+"/scorecards",predicate:"scorecards"in project,shortcut:project.scorecards,helpText:"Scorecards for '"+project.name+"'",processor:function(result){project.scorecardsById=indexOnId(result["scorecards"]);project.scorecards=groupScorecards(result["scorecards"]);return project.scorecards}},cb)};GiddyUp.fetchMatrix=function(scorecard,cb){GiddyUp.fetch({url:"/scorecards/"+scorecard.id.toString()+"/matrix",predicate:"tests"in scorecard,shortcut:scorecard,helpText:"Test matrix for '"+scorecard.project+" "+scorecard.name+"'",processor:function(result){scorecard.platforms=extractPlatforms(result["tests"]);scorecard.tests=groupMatrix(result["tests"],scorecard.platforms);scorecard.testsById=indexOnId(result["tests"]);return scorecard}},cb)};GiddyUp.fetchArtifacts=function(test_result,cb){GiddyUp.fetch({url:"/test_results/"+test_result.id+"/artifacts",predicate:"artifacts"in test_result,shortcut:test_result.artifacts,helpText:"Artifacts for result "+test_result.id,processor:function(result){test_result.artifacts=result["artifacts"].sort(GiddyUp.sortBy("id"));test_result.artifactsById=indexOnId(test_result.artifacts);return test_result.artifacts}},cb)};GiddyUp.fetchArtifactContents=function(artifact,cb){GiddyUp.fetch({url:"/artifacts/"+artifact.id,predicate:"contents"in artifact,shortcut:artifact.contents,helpText:"Contents of artifact "+artifact.id,processor:function(result){artifact.contents=result;return result},ajax:{cache:false,accepts:{text:artifact.content_type},dataType:"text"}},cb)};GiddyUp.fetch=function(options,cb){var url=options.url,predicate=options.predicate,shortcut=options.shortcut,helpText=options.helpText,processor=options.processor,ajaxOptions=options.ajax||{},callback=cb||$.noop,requestOptions={type:"GET",dataType:"json",url:url,context:{id:GiddyUp.nextGuid(),helpText:helpText,callbacks:[callback]}},active=GiddyUp.activeAjax[url];if(predicate){callback(shortcut)}else if(active){active.callbacks.push(callback)}else{var option;for(option in ajaxOptions){requestOptions[option]=ajaxOptions[option]}$.ajax(requestOptions).done(function(result){var param=processor(result);this.callbacks.forEach(function(deferred){deferred(param)})}).fail(function(){console.log(arguments)});GiddyUp.render()}}});minispade.register("app",function(){var GiddyUp=window.GiddyUp={projects:[],projectsById:{},showing:{},activeAjax:{},guid:0};GiddyUp.nextGuid=function(){GiddyUp.guid+=1;return GiddyUp.guid};GiddyUp.sortBy=function(prop){return function(a,b){if(a[prop]<b[prop])return-1;if(a[prop]>b[prop])return 1;return 0}};Nav=React.createClass({displayName:"Nav",render:function(){var children=[ProjectsNav({key:"projects",showing:this.props.showing})];if(this.props.showing.project_id){var pid=this.props.showing.project_id;var project=GiddyUp.projectsById[pid];if(project){children.push(ScorecardsNav({key:pid+"/scorecards",project:project,showing:this.props.showing}))}}return React.DOM.div(null,children)}});Main=React.createClass({displayName:"Main",getInitialState:function(){return{project:undefined,scorecard:undefined,test:undefined}},componentDidMount:function(){this.loadData(this.props.showing)},componentWillReceiveProps:function(nextProps){if(nextProps.showing!==this.props.showing){this.loadData(nextProps.showing)}},loadData:function(showing){var self=this,project,scorecard,test;GiddyUp.fetchProjects(function(projects){project=GiddyUp.projectsById[showing.project_id];if(showing.project_id&&project){GiddyUp.fetchScorecards(project,function(scorecards){scorecard=project.scorecardsById[showing.scorecard_id];if(showing.test_instance_id&&scorecard.testsById){test=scorecard.testsById[showing.test_instance_id]}var newState={project:project,scorecard:scorecard,test:test};self.setState(newState)})}else{self.setState({project:project,scorecard:scorecard,test:test})}})},render:function(){var showing=this.props.showing;var project=this.state.project,scorecard=this.state.scorecard,test=this.state.test;if(project&&scorecard){if(test){return Results({scorecard:scorecard,showing:showing,test:test})}else{return Matrix({scorecard:scorecard})}}else{return React.DOM.div(null)}}});App=React.createClass({displayName:"App",render:function(){return React.DOM.div({className:"container-fluid"},Nav({showing:this.props.showing}),Help({content:Help[this.props.help]}),Loading({queue:this.props.loading}),Main({showing:this.props.showing}))}});GiddyUp.render=function(){window.requestAnimationFrame(function(){React.renderComponent(App({showing:GiddyUp.showing,help:GiddyUp.help,loading:GiddyUp.activeAjax}),document.getElementById("app"))})};minispade.require("polyfills");minispade.require("ajax");minispade.require("help");minispade.require("loading");minispade.require("projects");minispade.require("scorecards");minispade.require("matrix");minispade.require("results");minispade.require("artifacts");minispade.require("raf");minispade.require("routes");routie.navigateToHash()});minispade.register("artifacts",function(){var shortPath=function(url){if(url===undefined||url===null)return"";var path=url.split("/").slice(3);if(path[0].match("^[0-9]+$"))return path.slice(1).join("/");else return path.join("/")};var parseContentType=function(ctype){return ctype.toString().split(";")[0].trim().split("/")};ArtifactList=React.createClass({displayName:"ArtifactList",getInitialState:function(){return{loaded:false}},loadArtifacts:function(){var self=this;GiddyUp.fetchArtifacts(this.props.test_result,function(artifacts){self.setState({loaded:true})})},componentWillMount:function(){if(this.props.active){this.loadArtifacts()}},componentWillReceiveProps:function(nextProps){if(nextProps.active&&!this.state.loaded)this.loadArtifacts()},render:function(){var active=this.props.active,loaded=this.state.loaded,showing=this.props.showing,artifacts=this.props.test_result.artifacts,friendlyUrl=this.props.friendlyUrl;if(active&&loaded){var list=artifacts.map(function(a){return ArtifactLink({showing:showing,key:a.id,artifact:a,friendlyUrl:friendlyUrl})});return React.DOM.ul({className:"nav nav-list"},list)}else{return React.DOM.span(null)}}});ArtifactLink=React.createClass({displayName:"ArtifactLink",render:function(){var artifact=this.props.artifact,showing=this.props.showing,active=showing.artifact_id===artifact.id.toString(),klass=active?"active":"",friendlyUrl=this.props.friendlyUrl,url;url="#"+routie.lookup("artifact",{project_id:showing.project_id,scorecard_id:showing.scorecard_id,test_instance_id:friendlyUrl,test_result_id:showing.test_result_id,artifact_id:artifact.id});return React.DOM.li({className:klass},React.DOM.a({href:url},MediaIcon({ctype:artifact.content_type}),shortPath(artifact.url)))}});MediaIcon=React.createClass({displayName:"MediaIcon",render:function(){var ctype=this.props.ctype,type=parseContentType(ctype),major=type[0],minor=type[1],icon;if(major==="image"){icon="icon-picture"}else if(major==="text"){if(minor==="csv"){icon="icon-th"}else{icon="icon-pencil"}}else{icon="icon-file"}return React.DOM.i({className:icon})}});ArtifactDisplay=React.createClass({displayName:"ArtifactDisplay",findArtifact:function(test,test_result_id,artifact_id){var test_result=undefined,artifact=undefined;test.test_results.forEach(function(tr){if(tr.id.toString()===test_result_id){test_result=tr}});if(test_result&&test_result.artifactsById){artifact=test_result.artifactsById[artifact_id]}return artifact},render:function(){var showing=this.props.showing,artifact;if(showing.artifact_id){artifact=this.findArtifact(this.props.test,showing.test_result_id,showing.artifact_id);if(artifact===undefined||artifact===null){return React.DOM.div({className:"span9 well"},"Loading...")}else{return React.DOM.div({className:"span9"},ArtifactElement({artifact:artifact}))}}else{return React.DOM.div({className:"span9 well"},"Select a test artifact to view its contents.")}}});ArtifactElement=React.createClass({displayName:"ArtifactElement",getInitialState:function(){return{text:undefined}},componentWillMount:function(){var artifact=this.props.artifact;this.loadContents(artifact)},componentWillReceiveProps:function(nextProps){if(this.props.artifact!==nextProps.artifact){this.setState({text:undefined});this.loadContents(nextProps.artifact)}},loadContents:function(artifact){var major=parseContentType(artifact.content_type)[0],self=this;if(major==="text"){GiddyUp.fetchArtifactContents(artifact,function(t){self.setState({text:t})})}},render:function(){var artifact=this.props.artifact,major=parseContentType(artifact.content_type)[0];if(major==="image"){return React.DOM.img({src:artifact.url})}else if(major==="text"){if(this.state.text!==undefined){return React.DOM.pre({className:"unabridged"},this.state.text)}else{return React.DOM.pre({className:"unabridged"},"Loading...")}}else{return React.DOM.p(null,React.DOM.i({className:"icon-download"}),React.DOM.a({target:"_blank",href:artifact.url},"Download this artifact"))}}})});minispade.register("help",function(){Help=React.createClass({displayName:"Help",getInitialState:function(){return{visible:false}},handleClick:function(event){this.setState({visible:!this.state.visible})},render:function(){var helpStyle={right:"110px",left:"auto",top:"40px",display:this.state.visible?"block":"none"};return React.DOM.div(null,React.DOM.img({className:"cowboy",src:"/images/cowboy.png",onClick:this.handleClick}),React.DOM.div({id:"help",className:"popover left",style:helpStyle},React.DOM.div({className:"arrow",style:{top:48}}),React.DOM.h3({className:"popover-title"},this.props.content.title),React.DOM.div({className:"popover-content"},this.props.content.body)))}});Help.projects={title:"Welcome to GiddyUp!",body:React.DOM.div(null,React.DOM.p({key:"projects1"},"GiddyUp is an API and user-interface to test results we collect"+" "+"from ",React.DOM.code(null,"riak_test"),". I'm your guide, ",React.DOM.em(null,"Artie"),", the"+" "+"Lone Testing Ranger."),React.DOM.p({key:"projects2"},"To get started, click a project to see which versions we've wrangled."))};Help.project={title:"Yeehaw!",body:React.DOM.p(null,"These are all the versions we've tested on the project, which I"+" "+"reckon are called scorecards. Click one in the second row to see a"+" "+"matrix of its results.")};Help.scorecard={title:"Lookout, stampede!",body:React.DOM.div(null,React.DOM.p(null,"Y'er looking at the results of test runs for a single project"+" "+"version."),React.DOM.p(null,"Down the leftmost column are the test names that were run. Across"+" "+"the top are the platforms the tests were run against."),React.DOM.p(null,"The colored bubbles indicate whether the latest run was a ",React.DOM.span({className:"badge badge-success"},"pass")," or a ",React.DOM.span({className:"badge"+" "+"badge-important"},"failure"),". Tests that have no results"+" "+"recorded are ",React.DOM.span({className:"badge"},"gray"),". While we're still"+" "+"counting the steers, the bubble will be ",React.DOM.span({className:"badge"+" "+"badge-loading"},React.DOM.a(null,"outlined")),"."),React.DOM.p(null,"The text in the bubble tells ye' the parameters for the"+" "+"test:"),React.DOM.ul(null,React.DOM.li(null," ",React.DOM.span({className:"badge"},"U")," Default backend"),React.DOM.li(null," ",React.DOM.span({className:"badge"},"B")," Bitcask backend"),React.DOM.li(null," ",React.DOM.span({className:"badge"},"L")," LevelDB backend"),React.DOM.li(null," ",React.DOM.span({className:"badge"},"M")," Memory backend"),React.DOM.li(null," ",React.DOM.span({className:"badge"},"N")," Multi-backend"),React.DOM.li(null," ",React.DOM.span({className:"badge"},"-1")," Upgraded from previous"),React.DOM.li(null," ",React.DOM.span({className:"badge"},"-2")," Upgraded from legacy")),React.DOM.p(null,"Ye' can click a bubble to see the results we got in the corral."))};Help.test_instance={title:"Have a look-see",body:React.DOM.div(null,"  ",React.DOM.p(null,"We herded these here test results into the corral for ye'."),React.DOM.p(null,"Down the left side are all the results, whether they be good or"+" "+"bad, how old they are, and which brood ",React.DOM.em(null,"erm")," version they"+" "+"came from. Select one and ye'll see its output on the right."))};Help.test_result={title:"Git along, lil' dogie!",body:React.DOM.p(null,"We herded a number for ye' from the time that there test was run."+" "+"Click an artifact to get an ideer of how things transpired.")};Help.artifact={title:"Whoa, boy!",body:React.DOM.div(null,"  ",React.DOM.p(null,"That there is a lot of stuff! riak_test uses lots of four-dollar"+" "+"words, I tell ye'."),React.DOM.p(null,"Scroll down to see the rest of the output if the thing you've"+" "+"selected is text. Otherwise just have a look at the pretty"+" "+"picture!"))}});minispade.register("loading",function(){Loading=React.createClass({displayName:"Loading",render:function(){var queue=this.props.queue,length=Object.keys(queue).length,statusStyle={right:"10px",left:"auto",top:"140px",display:length>0?"block":"none"},requests=Object.keys(queue).map(function(k){var req=queue[k];return React.DOM.li({key:req.id}," - ",req.helpText," ")});return React.DOM.div({className:"popover bottom",style:statusStyle},React.DOM.div({className:"arrow",style:{left:"75%"}}),React.DOM.h3({className:"popover-title"},"Hold yer horses!"),React.DOM.div({className:"popover-content"},React.DOM.p(null,"I've got ",React.DOM.span({className:"text-info"}," ",length," "),"more steers to herd."),React.DOM.ul({className:"unstyled"}," ",requests," ")))}})});minispade.register("matrix",function(){Matrix=React.createClass({displayName:"Matrix",getInitialState:function(){return{loaded:false}},componentDidMount:function(){this.loadMatrix(this.props.scorecard)},componentWillReceiveProps:function(nextProps){if(this.props.scorecard!==nextProps.scorecard){this.setState({loaded:false});this.loadMatrix(nextProps.scorecard)}},render:function(){return this.state.loaded?React.DOM.table({className:"table table-striped",key:this.props.scorecard.id},MatrixHeader({platforms:this.props.scorecard.platforms}),MatrixBody({scorecard:this.props.scorecard,platforms:this.props.scorecard.platforms,tests:this.props.scorecard.tests})):React.DOM.table({className:"table table-striped",key:this.props.scorecard.id})},loadMatrix:function(scorecard){var self=this;GiddyUp.fetchMatrix(scorecard,function(){self.setState({loaded:true})})}});MatrixHeader=React.createClass({displayName:"MatrixHeader",render:function(){var headers=this.props.platforms.map(function(p){return React.DOM.th({key:p},p)});return React.DOM.thead(null,React.DOM.th(null),headers)}});MatrixBody=React.createClass({displayName:"MatrixBody",render:function(){var rows=[];for(testname in this.props.tests){rows.push(MatrixRow({scorecard:this.props.scorecard,key:testname,test:this.props.tests[testname],platforms:this.props.platforms}))}return React.DOM.tbody(null," ",rows," ")}});MatrixRow=React.createClass({displayName:"MatrixRow",render:function(){var cells=[];var props=this.props;props.platforms.forEach(function(p){var platform=props.test[p];cells.push(MatrixCell({key:p,bubbles:platform,scorecard:props.scorecard}))});cells.unshift(React.DOM.td({key:"title"},this.props.key));return React.DOM.tr(null," ",cells," ")}});MatrixCell=React.createClass({displayName:"MatrixCell",render:function(){var props=this.props,bubbles=props.bubbles.map(function(b){return MatrixBubble({key:b.id,test:b,scorecard:props.scorecard})});return React.DOM.td(null,bubbles)}});var resultStatus=function(tr){return tr.status};var bubbleBackgroundStyle=function(test){var status=bubbleStatus(test),testResults,gradient,stepSize,red="#b94a48",green="#468847";if(status==="warning"){testResults=test.test_results.map(resultStatus).slice(0,4);stepSize=100/test.test_results.length;gradient="linear-gradient(right";testResults.forEach(function(st,idx){var color=st===true?green:red;gradient+=", "+color+" "+stepSize*idx+"%";gradient+=", "+color+" "+stepSize*(idx+1)+"%"});gradient+=")";var fgradient=["-moz-","-ms-","-o-","-webkit-",""].map(function(prefix){return"background-image: "+prefix+gradient}).join("; ");return{background:"inherit; "+fgradient}}else{return{}}};var bubbleStatus=function(test){if(test.test_results.length===0){return null}else{if(test.test_results.every(resultStatus)){return true}if(test.test_results.some(resultStatus)){return"warning"}return false}};var bubbleClassName=function(test){var status=bubbleStatus(test),classes=["badge"];if(status===true){classes.push("badge-success")}if(status===false){classes.push("badge-important")}if(status==="warning"){classes.push("badge-warning")}if(status===undefined){classes.push("badge-loading")}return classes.join(" ")};var bubbleAbbreviation=function(test){var parts=[];switch(test.backend){case"bitcask":parts.push("B");break;case"eleveldb":parts.push("L");break;case"memory":parts.push("M");break;case"multi":parts.push("N");break;default:break}switch(test.upgrade_version){case"previous":parts.push("-1");break;case"legacy":parts.push("-2");break;default:break}if(parts.length===0)return"U";else return parts.join("")};MatrixBubble=React.createClass({displayName:"MatrixBubble",render:function(){var friendlyId=friendlyTestUrl(this.props.scorecard,this.props.test),url="#"+routie.lookup("test_instance",{project_id:this.props.scorecard.project,scorecard_id:this.props.scorecard.id,test_instance_id:friendlyId});return React.DOM.div(null,React.DOM.span({className:bubbleClassName(this.props.test),style:bubbleBackgroundStyle(this.props.test)},React.DOM.a({href:url},bubbleAbbreviation(this.props.test))))}})});minispade.register("polyfills",function(){if(!Array.prototype.find){Object.defineProperty(Array.prototype,"find",{enumerable:false,configurable:false,writable:false,value:function(predicate){for(var i=0;i<this.length;i++){if(predicate(this[i],i,this)){return this[i]}}return void 0}})}});minispade.register("projects",function(){ProjectsNav=React.createClass({displayName:"ProjectsNav",getInitialState:function(){return{projects:GiddyUp.projects}},componentWillMount:function(){var self=this;GiddyUp.fetchProjects(function(projects){self.setState({projects:projects})})},render:function(){var self=this;var projects=this.state.projects.map(function(project){var key=project.name;return ProjectNavLink({key:key,project:project,showing:self.props.showing})});return React.DOM.div({className:"navbar",style:{marginBottom:0}},React.DOM.div({className:"navbar-inner"},React.DOM.a({href:"#/",className:"brand"},"GiddyUp"),React.DOM.ul({className:"nav"},projects)))}});ProjectNavLink=React.createClass({displayName:"ProjectNavLink",render:function(){var url="#"+routie.lookup("project",{project_id:this.props.project.name});return React.DOM.li({className:this.props.showing.project_id===this.props.project.name?"active":""},React.DOM.a({href:url}," ",this.props.project.name," "))}})});minispade.register("raf",function(){"use strict";if(!Date.now)Date.now=function(){return(new Date).getTime()};(function(){if(window.requestAnimationFrame)return;var vendors=["webkit","moz"];for(var i=0;i<vendors.length&&!window.requestAnimationFrame;++i){var vp=vendors[i];window.requestAnimationFrame=window[vp+"RequestAnimationFrame"];window.cancelAnimationFrame=window[vp+"CancelAnimationFrame"]||window[vp+"CancelRequestAnimationFrame"]}if(/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)||!window.requestAnimationFrame||!window.cancelAnimationFrame){var lastTime=0;window.requestAnimationFrame=function(callback){var now=Date.now();var nextTime=Math.max(lastTime+16,now);return setTimeout(function(){callback(lastTime=nextTime)},nextTime-now)};window.cancelAnimationFrame=clearTimeout}})()});minispade.register("results",function(){var testDescription=function(test){var desc=[];if(test.name)desc.push(test.name);if(test.platform)desc.push(test.platform);if(test.backend)desc.push(test.backend);if(test.upgrade_version)desc.push(test.upgrade_version);if(test.multi_config)desc.push(test.multi_config);return desc.join(" / ")};var timeAgoInWords=function(date){if(date===undefined||date===null)return"";var now=(new Date).getTime(),distance_in_seconds=(now-date.getTime())/1e3,distance_in_minutes=Math.round(distance_in_seconds/60),distance_in_hours=Math.round(distance_in_minutes/60),distance_in_days=Math.round(distance_in_minutes/1440),distance_in_months=Math.round(distance_in_minutes/43200),distance_in_years=Math.round(distance_in_days/365);if(distance_in_minutes<=1){return distance_in_minutes===0?"just now":"1 minute ago"}else if(distance_in_minutes>=2&&distance_in_minutes<=44){return distance_in_minutes+" minutes ago"}else if(distance_in_minutes>=45&&distance_in_minutes<=89){return"about 1 hour ago"}else if(distance_in_minutes>=90&&distance_in_minutes<=1439){return"about "+distance_in_hours+" hours ago"}else if(distance_in_minutes>=1440&&distance_in_minutes<=2519){return"1 day ago"}else if(distance_in_minutes>=2520&&distance_in_minutes<=43199){return distance_in_days+" days ago"}else if(distance_in_minutes>=43200&&distance_in_minutes<=86399){return"about 1 month ago"}else if(distance_in_minutes>=86400&&distance_in_minutes<=525599){return distance_in_months+" months ago"}else if(distance_in_months<13){return"about 1 year ago"}else if(distance_in_years<2){return"over 1 year ago"}else{return distance_in_years+" years ago"}};Results=React.createClass({displayName:"Results",render:function(){var scorecard=this.props.scorecard,test=this.props.test,showing=this.props.showing,description,scorecard_url,result,result_list,display;description=testDescription(test);scorecard_url="#"+routie.lookup("scorecard",{project_id:showing.project_id,scorecard_id:showing.scorecard_id});result_list=test.test_results.map(function(tr){return TestResult({key:tr.id,scorecard:scorecard,test:test,test_result:tr,showing:showing})});return React.DOM.div(null,React.DOM.div({className:"row-fluid"},React.DOM.h4(null,React.DOM.a({href:scorecard_url},scorecard.name)," : ",description)),React.DOM.div({className:"row-fluid"},React.DOM.div({className:"span3 well"},React.DOM.ul({className:"nav nav-list"},result_list)),ArtifactDisplay({showing:showing,test:test})))}});TestResult=React.createClass({displayName:"TestResult",render:function(){var showing=this.props.showing,scorecard=this.props.scorecard,test=this.props.test,test_result=this.props.test_result,active=test_result.id.toString()===showing.test_result_id,labelClass=test_result.status?"label label-success":"label label-important",labelText=test_result.status?"Success":"Failure",liClass=active?"active":"",friendlyUrl=friendlyTestUrl(scorecard,test),url;url="#"+routie.lookup("test_result",{project_id:showing.project_id,scorecard_id:showing.scorecard_id,test_instance_id:friendlyUrl,test_result_id:test_result.id});return React.DOM.li({className:liClass},React.DOM.a({href:url,className:liClass},React.DOM.span({className:labelClass},labelText),timeAgoInWords(new Date(test_result.created_at))," [",test_result.long_version,"]"),ArtifactList({showing:showing,test_result:test_result,friendlyUrl:friendlyUrl,active:active}))}})});minispade.register("routes",function(){routie.navigateToHash=function(){var hash=window.location.hash.substring(1);if(hash===""||hash===undefined)window.location.hash="#/"};friendlyTestUrl=function(scorecard,test){var parts=[scorecard.id,test.id,test.name,test.platform];if(test.backend){parts.push(test.backend)}if(test.upgrade_version){parts.push(test.upgrade_version)}return encodeURIComponent(parts.join("-"))};extractTestId=function(segment){segment=decodeURIComponent(segment);return segment.split("-")[1]};routie({"projects /":function(p){GiddyUp.showing={};GiddyUp.help="projects";GiddyUp.fetchProjects(GiddyUp.render)},"project /projects/:project_id":function(p){GiddyUp.showing={project_id:p};GiddyUp.help="project";GiddyUp.fetchProjects(function(){var project=GiddyUp.projectsById[p];GiddyUp.fetchScorecards(project,GiddyUp.render)})},"scorecard /projects/:project_id/scorecards/:scorecard_id":function(p,s){GiddyUp.showing={project_id:p,scorecard_id:s};GiddyUp.help="scorecard";GiddyUp.fetchProjects(function(){var project=GiddyUp.projectsById[p];GiddyUp.fetchScorecards(project,function(scorecards){GiddyUp.fetchMatrix(project.scorecardsById[s],GiddyUp.render)})})},"test_instance /projects/:project_id/scorecards/:scorecard_id/:test_instance_id":function(p,s,ti){GiddyUp.showing={project_id:p,scorecard_id:s,test_instance_id:extractTestId(ti)};GiddyUp.help="test_instance";GiddyUp.fetchProjects(function(){var project=GiddyUp.projectsById[p];GiddyUp.fetchScorecards(project,function(scorecards){GiddyUp.fetchMatrix(project.scorecardsById[s],GiddyUp.render)})})},"test_result /projects/:project_id/scorecards/:scorecard_id/:test_instance_id/:test_result_id":function(p,s,ti,tr){ti=extractTestId(ti);GiddyUp.showing={project_id:p,scorecard_id:s,test_instance_id:ti,test_result_id:tr};GiddyUp.help="test_result";GiddyUp.fetchProjects(function(){var project=GiddyUp.projectsById[p];GiddyUp.fetchScorecards(project,function(scorecards){GiddyUp.fetchMatrix(project.scorecardsById[s],function(scorecard){GiddyUp.fetchArtifacts(scorecard.testsById[ti].resultsById[tr],GiddyUp.render)})})})},"artifact /projects/:project_id/scorecards/:scorecard_id/:test_instance_id/:test_result_id/artifacts/:artifact_id":function(p,s,ti,tr,a){ti=extractTestId(ti);GiddyUp.showing={project_id:p,scorecard_id:s,test_instance_id:ti,test_result_id:tr,artifact_id:a};GiddyUp.help="artifact";GiddyUp.fetchProjects(function(){var project=GiddyUp.projectsById[p];GiddyUp.fetchScorecards(project,function(scorecards){GiddyUp.fetchMatrix(project.scorecardsById[s],function(scorecard){GiddyUp.fetchArtifacts(scorecard.testsById[ti].resultsById[tr],function(artifacts){GiddyUp.fetchArtifactContents(scorecard.testsById[ti].resultsById[tr].artifactsById[a],GiddyUp.render)})})})});GiddyUp.render()}})});minispade.register("scorecards",function(){ScorecardsNav=React.createClass({displayName:"ScorecardsNav",getInitialState:function(){return{scorecards:{}}},componentWillMount:function(){var self=this;GiddyUp.fetchScorecards(this.props.project,function(scorecards){self.setState({scorecards:scorecards})})},render:function(){var self=this,links=[],version;for(version in this.state.scorecards){var dropdown=ScorecardNavGroup({key:version,version:version,showing:this.props.showing,scorecards:this.state.scorecards[version]});links.push([version,dropdown])}links.sort(GiddyUp.sortBy(0)).reverse();links=links.map(function(l){return l[1]});return React.DOM.div({className:"navbar",style:{marginTop:"-1px"}},React.DOM.div({className:"navbar-inner"},React.DOM.ul({className:"nav"},links)))}});ScorecardNavGroup=React.createClass({displayName:"ScorecardNavGroup",getInitialState:function(){return{dropdown:false,lastEvent:null}},className:function(){var id=this.props.showing.scorecard_id,match=this.props.scorecards.find(function(s){return s.id==id});classes=["dropdown"];if(this.state.dropdown)classes.push("open");if(match)classes.push("active");return classes.join(" ")},linkText:function(){var id=this.props.showing.scorecard_id,match=this.props.scorecards.find(function(s){return s.id==id});if(match){return match.name}else{return this.props.version}},handleClick:function(evt){evt.nativeEvent.guid=GiddyUp.nextGuid();this.setState({dropdown:!this.state.dropdown,lastEvent:evt.nativeEvent.guid});evt.preventDefault()},handleDocumentClick:function(evt){if(this.state.lastEvent===evt.guid)return;this.setState({dropdown:false,lastEvent:null})},componentDidMount:function(){window.addEventListener("click",this.handleDocumentClick)},componentWillUnmount:function(){window.removeEventListener("click",this.handleDocumentClick)},render:function(){if(this.props.scorecards.length==1){return ScorecardNavLink({showing:this.props.showing,scorecard:this.props.scorecards[0]})}else{var self=this;var classname=this.className();var text=this.linkText();var links=this.props.scorecards.map(function(s){return ScorecardNavLink({scorecard:s,key:s.id,showing:self.props.showing})});return React.DOM.li({className:classname},React.DOM.a({href:"#",className:"dropdown-toggle",onClick:this.handleClick},text,React.DOM.b({className:"caret"})),React.DOM.ul({className:"dropdown-menu"},links))}}});ScorecardNavLink=React.createClass({displayName:"ScorecardNavLink",render:function(){var active=this.props.showing.scorecard_id==this.props.scorecard.id.toString(),url="#"+routie.lookup("scorecard",{scorecard_id:this.props.scorecard.id,project_id:this.props.scorecard.project});return React.DOM.li({className:active?"active":""},React.DOM.a({href:url}," ",this.props.scorecard.name," "))}})});
//# sourceMappingURL=/javascripts/application.js.map